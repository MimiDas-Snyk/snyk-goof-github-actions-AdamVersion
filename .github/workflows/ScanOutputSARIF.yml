name: Snyk Full Security Scan

on:
  push:
  pull_request:

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install
          npm install http-signature

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master

      - name: Snyk OSS scan (dependencies)
        run: snyk test --sarif-file-output=snyk-oss.sarif --all-projects --detection-depth=2 --exclude=node_modules
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Snyk Code scan (static analysis)
        run: snyk code test --sarif > snyk-code.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Debug: List SARIF file presence and size
        run: |
          ls -lh *.sarif || true

      - name: Sanitize SARIF files (OSS + Code)
        run: |
          cat <<EOF > sanitize.js
const fs = require('fs');
const files = ['snyk-oss.sarif', 'snyk-code.sarif'];

for (const file of files) {
  if (!fs.existsSync(file)) {
    console.warn(\`‚ö†Ô∏è File not found: \${file}\`);
    continue;
  }

  console.log(\`üßº Sanitizing: \${file}\`);
  const sarif = JSON.parse(fs.readFileSync(file, 'utf8'));
  let fixed = false;

  for (const run of sarif.runs || []) {
    const rules = run.tool?.driver?.rules || [];
    for (const rule of rules) {
      rule.properties = rule.properties || {};
      if (typeof rule.properties.securitySeverity !== 'number') {
        rule.properties.securitySeverity = 3.0;
        fixed = true;
      }
    }
  }

  if (fixed) {
    fs.writeFileSync(file, JSON.stringify(sarif, null, 2));
    console.log(\`‚úÖ \${file} sanitized and saved.\`);
  } else {
    console.log(\`‚úÖ \${file} already clean.\`);
  }
}
EOF
          node sanitize.js

      - name: Debug: Validate sanitized SARIF contents
        run: |
          echo "--- snyk-oss.sarif ---"
          grep -i securitySeverity snyk-oss.sarif || echo "None found"
          echo "--- snyk-code.sarif ---"
          grep -i securitySeverity snyk-code.sarif || echo "None found"

      - name: Upload OSS SARIF to GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-oss.sarif

      - name: Upload Code SARIF to GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
