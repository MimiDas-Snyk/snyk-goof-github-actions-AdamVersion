- name: Generate PR comment summary
run: |
  node <<'EOF'
  const fs = require('fs');
  const data = JSON.parse(fs.readFileSync('snyk-oss-results.json', 'utf8'));
  const severityRank = s => ({critical:4, high:3, medium:2, low:1}[s] || 0);
  const manifestGroups = {};

  const projects = Array.isArray(data) ? data : [data]; // Handle both single and multi-project output

  for (const project of projects) {
    const manifest = project.displayTargetFile || project.targetFile || project.projectName || 'unknown';
    for (const vuln of project.vulnerabilities || []) {
      manifestGroups[manifest] = manifestGroups[manifest] || [];
      manifestGroups[manifest].push(vuln);
    }
  }

  let output = '## 🔐 Snyk OSS Vulnerabilities by Manifest\n\n';
  for (const file in manifestGroups) {
    const vulns = manifestGroups[file]
      .sort((a, b) => severityRank(b.severity) - severityRank(a.severity))
      .slice(0, 5);

    output += `### 📦 ${file}\n`;
    output += `| Severity | Package | Title | Fix Available |\n`;
    output += `|----------|---------|-------|----------------|\n`;
    for (const v of vulns) {
      const fix = v.fixedIn?.[0] || 'N/A';
      output += `| ${v.severity.toUpperCase()} | ${v.packageName}@${v.version} | ${v.title} | ${fix} |\n`;
    }
    output += '\n';
  }

  if (output.trim().length < 50) {
    output += '_No vulnerabilities found._\n';
  }

  fs.writeFileSync('pr-comment.md', output);
  EOF
